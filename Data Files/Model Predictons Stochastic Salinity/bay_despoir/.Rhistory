# Producing a map of Bay d'Espoir
rm(list=ls())
setwd("/Users/jakeprosser/Desktop/Shared-with-Amy/thesis_work/first_chapter/winter_2020/model_code/data_files/baydespoir/")
#install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
# "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
# Packages needed
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library(rgeos)
library("ggspatial")
library(patchwork)
library(cowplot)
library(bbmle)
# Plot of Bay d'Espoir
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
bay.map <-
ggplot(data = world) +
geom_sf() +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
annotate(geom = "text", x = -56.07, y = 47.64, label = "Bay d'Espoir",
fontface = "bold", color = "black", size = 4) +
coord_sf(xlim = c(-60, -52), ylim = c(46, 52), expand = FALSE) +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
) +
labs(x="", y="")
# Information needed for salinity plots
# Loading Bay D'Esspoir dataset
baydespoir_prof <- read.csv("baydespoir_prof.csv")
# Using a lower dx will produce a smoother line for the curve. When not using to generate the plot, it should
# be set to 0.1
#  Asymetric Laplace distrubution -----------------------------------------------
# Using the Asymmetric Laplace distrubution to produce a cummulative distrubution
# Changing the bin and x-vectors
dx <- 0.5
sub.edge <- seq(15, 40, dx)
sub.mid <- seq(15+dx/2, 40-dx/2, dx)
sub.x <- sub.mid
# Subsetting to only take values that are greater then 15
sub.bay <- subset(baydespoir_prof, PSAL >= 15)
sub.bay <- na.omit(sub.bay$PSAL)
# Plotting the subset distrubution
sub.hist <- hist(sub.bay, sub.edge) # Plotting the histogram when subsetted from 15-40
sub.freq <- sub.hist$counts
sub.freq <- sub.freq/sum(sub.freq)# Converting the count data into frequency
# Find the m value
sub.df <- as.data.frame(cbind(sub.x, sub.hist$counts))
sub.df[which.max(sub.df$V2),]  # The maxium value for m therefore is 32.2
sub.m <- sub.df[which.max(sub.df$V2),][1,1] # Pulls only the m value
sigma=1
pho0 <- 1.9137
k0 <- 1.223080
sub.asy.laplace <- function(sub.m, pho, k){
d <- (pho/(k+(1/k)))*exp(-((sub.x-sub.m)*pho*(sign(sub.x-sub.m))*k^(sign(sub.x-sub.m))))
} # Same distrubution but x was changed to sub.x. Sub.x is the x-vector for the subset data
sub.dx <-
# Produce the asymmetric laplce with the dx
sub.asy.laplace.dx <- function(sub.m, pho, k){
d <- dx*(pho/(k+(1/k)))*exp(-((sub.x-sub.m)*pho*(sign(sub.x-sub.m))*k^(sign(sub.x-sub.m))))
}
sub.negLL = function(pho, k){
-sum(dnorm(sub.freq, mean=sub.asy.laplace(sub.m, pho, k), sd=sigma, log=TRUE))
} # Only want to fit to pho and k so only include them within the code
sub.mle.asy.laplace.Ex <- mle2(sub.negLL,
start=list(pho=1, k=3), ) # Similary, only want to fit to pho and k
a.est <- unname(coef(sub.mle.asy.laplace.Ex))[-4]
print(a.est)
# The probability distrubution is described by
# Combing the distrubutions into one distrubution
sub.sal.df <- as.data.frame(cbind(sub.x, sub.asy.laplace(sub.m, a.est[1], a.est[2]),
cumsum(sub.asy.laplace(sub.m, a.est[1], a.est[2]))))
names(sub.sal.df) <- c("Salinity Values", "PDF", "CDF")
head(sub.sal.df)
hist.sal.plot <- as.data.frame(cbind(sub.x, sub.bay/sum(sub.bay), sub.bay,
sub.edge,sub.asy.laplace(sub.m, 1.91, 1.22), rep(1.8217, 50)))
names(hist.sal.plot) <- c("Salinity", "Frequency", "Recorded Sal", "Bin Edge", "Probability", "Scale Parameter")
# Building a plot that highlights the difference between the different pho values and salintiy
# Creating a new data frame for the ggplot
var.salinity.dist.df <- as.data.frame(
cbind(rep(sub.x, 11),
c(sub.asy.laplace(sub.m, 4, k0), sub.asy.laplace(sub.m, 3.5, k0), sub.asy.laplace(sub.m, 3, k0),
sub.asy.laplace(sub.m, 2.5, k0), sub.asy.laplace(sub.m, 2, k0), sub.asy.laplace(sub.m, 1.8217, k0),
sub.asy.laplace(sub.m, 1.4391, k0), sub.asy.laplace(sub.m, 1.0565, k0), sub.asy.laplace(sub.m, 0.6739, k0),
sub.asy.laplace(sub.m, 0.4826, k0), sub.asy.laplace(sub.m, 0.2913, k0)),
c(rep(4, 50), rep(3.5, 50), rep(3, 50), rep(2.5, 50), rep(2, 50), rep(1.8217, 50), rep(1.4391, 50),
rep(1.0565, 50), rep(0.6739, 50), rep(0.4826, 50), rep(0.2913, 50))
))
names(var.salinity.dist.df) <- c("Salinity", "Probability", "Scale Parameters")
var.sal.plot <-
ggplot(var.salinity.dist.df, aes(x=Salinity, y=Probability,
colour=factor(`Scale Parameters`))) +
geom_line() +
scale_colour_manual(values = rev(c("black", "brown", "blue", "purple", "pink",
"red", "orange", "yellow", "cyan", "green",
"darkgreen")),
name = "Scale Parameter") +
xlim(26, 35) +
ylim(0, 2.3) +
labs(x = "Salinity (psu)",
y = "Probability") +
theme_classic()
var.sal.plot
var.sal.plot <-
ggplot(var.salinity.dist.df, aes(x=Salinity, y=Probability,
colour=factor(`Scale Parameters`))) +
geom_line() +
scale_colour_manual(values = rev(c("black", "brown", "blue", "purple", "pink",
"red", "orange", "yellow", "cyan", "green",
"darkgreen")),
name = "Scale Parameter") +
xlim(26, 35) +
ylim(0, 2.3) +
labs(x = "Salinity (psu)",
y = "Probability") +
theme_classic() +
theme(axis.text.x=element_text(size= 14),
axis.text.y=element_text(size= 14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size=14),
legend.title = element_text(size = 14))
var.sal.plot
